/*******************************************************************************
**
** Copyright (C) 2022 Open Mobile Platform LLC.
** Contact: https://community.omprussia.ru/open-source
**
** This file is part of the Aurora OS Application Template project.
**
** Redistribution and use in source and binary forms,
** with or without modification, are permitted provided
** that the following conditions are met:
**
** * Redistributions of source code must retain the above copyright notice,
**   this list of conditions and the following disclaimer.
** * Redistributions in binary form must reproduce the above copyright notice,
**   this list of conditions and the following disclaimer
**   in the documentation and/or other materials provided with the distribution.
** * Neither the name of the copyright holder nor the names of its contributors
**   may be used to endorse or promote products derived from this software
**   without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
** FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
** OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
** PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
** LOSS OF USE, DATA, OR PROFITS;
** OR BUSINESS INTERRUPTION)
** HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
** EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
*******************************************************************************/

import QtQuick 2.0
import Sailfish.Silica 1.0

Page {
    objectName: "mainPage"
    allowedOrientations: Orientation.All




//1






    Column{
        id:col

        property int name: 0
       Rectangle{
           id:fir
           width: 100
           height: 100
           color: "black"
           state: "blue"
           states: [State{
               name:"red"
               when:(col.name == 1)
               PropertyChanges {
                   target: fir
                   color:"red"

               }
               StateChangeScript{
                                       script:{col.name++;console.log(col.name);}
                                   }
           },State{
                   name:"blu"
                   when:(col.name==0)
                   PropertyChanges {

                       target: fir
                       color:"blue"

                   }
                   StateChangeScript{
                                           script:{col.name++;console.log(col.name);console.log(fir.states[1].when===true);fir.states[0].when=true}


                                       }
               }

           ]

       }
       Button{
           onClicked: col.name--
       }
       Rectangle{
           id:sec
           color: "black"
           width:100
           height: 100
           states:[State{when:(col.name==1)
                   PropertyChanges {
                       target: sec
                       color:"blue"

                   }},
               State{when:(col.name==0)
                   PropertyChanges {
                       target: sec
                       color:"red"

                   }}]
       }

    }




























//    Column{
//        id: col
//        property int svet: 0
//        Rectangle{
//            id:first
//            width: 100
//            height: 100
//            radius: 50

//            state: "off"
//            states: [
//                State{
//                    when: (col.svet == 0)
//                    name: "on"
//                    PropertyChanges {
//                       target: first
//                       color:"red"
//                    }
//                    StateChangeScript{
//                        script:{console.log(col.svet); col.svet++}
//                    }
//                },
//                State{
//                    when: (col.svet != 0)
//                    name: "off"
//                    PropertyChanges {
//                       target: first
//                       color:"black"
//                    }
//                    StateChangeScript{
//                        script:{console.log(col.svet)}
//                    }
//                }

//            ]
//        }
//        Rectangle{
//            id:second
//            width: 100
//            height: 100
//            radius: 50
//            state: "off"
//            states: [
//                State{
//                    when: (col.svet == 1 || col.svet == 3)
//                    name: "on"
//                    PropertyChanges {
//                       target: second
//                       color:"yellow"
//                    }
//                    StateChangeScript{
//                        script:{console.log(col.svet); col.svet++}
//                    }

//                },
//                State{
//                    when: (col.svet == 0 || col.svet == 2)
//                    name: "off"
//                    PropertyChanges {
//                       target: second
//                       color:"black"
//                    }
//                    StateChangeScript{
//                        script:console.log(col.svet)
//                    }
//                }

//            ]
//        }
//        Rectangle{
//            id:third
//            width: 100
//            height: 100
//            radius: 50
//            state: "off"
//            states: [
//                State{
//                    when: (col.svet == 2)
//                    name: "on"
//                    PropertyChanges {
//                       target: third
//                       color:"green"
//                    }
//                    StateChangeScript{
//                        script:{console.log(col.svet); col.svet++}
//                    }
//                },
//                State{
//                    when: (col.svet == 0 || col.svet == 1 || col.svet == 3)
//                    name: "off"
//                    PropertyChanges {
//                       target: third
//                       color:"black"
//                    }
//                    StateChangeScript{
//                        script:{console.log(col.svet);}
//                    }
//                }

//            ]
//        }
//    }






















//Column{

//    Rectangle{
//        id:red
//        color: "red"

//        width: 100
//        height: 100
//        radius: 50

//    state: "black"
//        states: [State {
//                name: "red"
//                PropertyChanges {target: red; color: "red"}
//            },State{
//                name: "black"
//                PropertyChanges {target: red; color: "black"}
//            }]
//    }

//    Rectangle{
//        id: ye
//        color: "yellow"

//        width: 100
//        height: 100
//        radius: 50

//        state: "black"
//            states: [State {
//                    name: "yellow"
//                    PropertyChanges {target: ye; color: "yellow"}
//                },State{
//                    name: "black"
//                    PropertyChanges {target: ye; color: "black"}
//                }]
//    }

//    Rectangle{
//        id: gr
//        color: "green"

//        width: 100
//        height: 100
//        radius: 50

//        state: "black"
//            states: [State {
//                    name: "green"
//                    PropertyChanges {target: gr; color: "green"}
//                },State{
//                    name: "black"
//                    PropertyChanges {target: gr; color: "black"}
//                }]
//    }


//    IconButton{

//        icon.source: "image://theme/icon-m-people?"
//        RotationAnimation on x{
//                    loops: Animation.Infinite
//                    from: 0
//                    to: 300
//                    duration: 1000
//                }
//    }



//    Timer {
//        property int next: 0
//            interval: 500; running: true; repeat: true
//            onTriggered: {

//                if(next == 0)
//                {
//                    if(ye.state == "yellow")
//                    {ye.state = "black"}
//                    red.state = red.state == "red" ? "black":"red"
//                    next = 1
//                }
//                else if(next == 1)
//                {
//                    red.state = red.state == "red" ? "black":"red"
//                    ye.state = ye.state == "yellow" ? "black":"yellow"
//                    next = 2
//                }
//                else if(next == 2)
//                {
//                    ye.state = ye.state == "yellow" ? "black":"yellow"
//                    gr.state = gr.state == "green" ? "black":"green"
//                    next = 3
//                }
//                else if(next == 3)
//                {
//                    gr.state = gr.state == "green" ? "black":"green"
//                    ye.state = ye.state == "yellow" ? "black":"yellow"
//                    next = 0
//                }



//            }


//        }














//}




























}
